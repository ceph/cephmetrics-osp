heat_template_version: 2013-05-23

description: >
  A template to create Ceph stuff
parameters:
#  key_name:
#    type: string
#    description:
#      Name of an existing key pair to enable SSH access to the instance.
  instance_type:
    type: string
    description: Type of the instance to be created.
    default: m1.medium
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large]
        description:
          Value must be one of 'm1.small', 'm1.medium' or 'm1.large'.
  image_id:
    type: string
    description: ID of the image to use for the instance to be created.
    default: centos_7
    constraints:
      - allowed_values: [ centos_7, rhel_7 ]
        description:
          Image ID must be either centos_7 or rhel_7.
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 40
    constraints:
      - range: { min: 20, max: 1024 }
        description: must be between 1 and 1024 Gb.
  provider_net_name:
    type: string
    default: cephmetrics
    description: Name of provider network
  metrics_net_vlan:
    type: string
    default: 80
    description: The VLAN used by the cephmetrics network
  metrics_net_cidr:
    type: string
    default: '172.16.5.0/24'
  metrics_net_allocation_pools:
    type: string
    default: [{'start': '172.16.5.4', 'end': '172.16.5.250'}]
  private_net_allocation_pools:
    type: string
    default: [{'start': '192.168.25.4', 'end': '192.168.25.250'}]
  ###
  metrics_net_id:
    type: string
    description: ID of the cephmetrics network
  metrics_subnet_id:
    type: string
    description: ID of the cephmetrics subnet
resources:
  provider_network:
    type: OS::Neutron::ProviderNet
    properties:
      name: external
      network_type: vlan
      #physical_network: { get_resource: provider_net_name }
      physical_network: datacentre
      router_external: false
      shared: false
  private_net:
    type: OS::Neutron::Net
    properties:
      name: private
      segments:
        - { get_param: metrics_net_vlan }
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: private
      network_id: { get_resource: private_net }
      #network_id: { get_resource: provider_network }
      cidr: { get_param: metrics_net_cidr }
      allocation_pools: { get_param: private_net_allocation_pools }
  public_net:
    type: OS::Neutron::Net
    properties:
      name: public
  public_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: public
      #network_id: { get_resource: provider_network }
      cidr: { get_param: metrics_net_cidr }
      allocation_pools: { get_param: metrics_net_allocation_pools }
  private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
  metrics_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: public_net }
      fixed_ips:
        - subnet_id: { get_resource: public_subnet }
  router:
    type: OS::Neutron::Router
    properties:
      name: router
      external_gateway_info:
        network: { get_resource: provider_network }
#  nova_instance:
#    type: OS::Nova::Server
#    properties:
#      availability_zone: { get_param: availability_zone }
#      image: { get_param: image_id }
#      flavor: { get_param: instance_type }
#      key_name: { get_param: key_name }
#      networks:
#        - port: { get_resource: private_port }
#        - port: { get_resource: metrics_port }
#  cinder_volume:
#    type: OS::Cinder::Volume
#    properties:
#      size: { get_param: volume_size }
#      availability_zone: { get_param: availability_zone }
#  volume_attachment:
#    type: OS::Cinder::VolumeAttachment
#    properties:
#      volume_id: { get_resource: cinder_volume }
#      instance_uuid: { get_resource: nova_instance }
#      mountpoint: /dev/vdc
#  server_port:
#    type: OS::Neutron::Port
#    properties:
#      network_id: { get_param: metrics_net_id }
#      fixed_ips:
#        - subnet_id: { get_param: metrics_subnet_id }
#      security_groups: [{ get_resource: server_security_group }]
#  server_floating_ip:
#    type: OS::Neutron::FloatingIP
#    properties:
#      floating_network_id: { get_param: metrics_net_id }
#      port_id: { get_resource: server_port }
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: cephmetrics
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 3000
          port_range_max: 3000
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 9090
          port_range_max: 9090
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 9100
          port_range_max: 9100
#outputs:
#  instance_ip:
#    description: Public IP address of the cephmetrics instance
    #value: { get_attr: [nova_instance, first_address] }
#    value: { get_attr: [server_floating_ip, floating_ip_address] }
